\documentclass{article}

\begin{document}

https://drive.google.com/file/d/1Oe__q_SkjiQkz33lqwD4gSUQ74B5GO_T/view
<<>>=
library(WDI)
library(tidyr)
library(dplyr)
library(readxl)
library(rgdal)
library(spdep)
library(GISTools)
library(countrycode)
library(data.table)
library(mice)
library(splm)
@

Haben wir:
GDP keine NAs
population keine NAs
political risk (mach ich) keine NAs
fiancial risk keine NAs 
economic risk keine NAs
trade cost (Patrick), keine NAs bis auf Ethiopien, (Exports+Imports/GDP)# sollte jetzt auch passen, noch checken ob wir das eh so ersetzen können
sourrounding market potential, haben wir, #haben wir jetzt berechnet
Distance china host countries, haben wir #schon berechnet bei Daten section


measure of skilled-labor endowments (alle)  (average years of schooling)-->Literacy, muss noch bearbeitet werden
investment cost (risk haben wir als variable in political risk)-->Natural Resources, haben wir
Moser Data, bits data-> haben wir




Wichtige Infos zur Datensuche vom Paper

%%%%%%%%%%%%%%%%%%%%%%%%%%%
Zusätzliche Daten die wir für unsere Host countries noch suchen sollten (also Afrika daweil)
(GDP(+) haben wir , population(-), distance between the parent and host countries, and trade/investment friction +
variables, measure of skilled-labor endowments, investment risk).

Population: haben wir 
are therefore included to control for the known tendency for FDI to move
between wealthy markets

trade/investment friction variables: haben wir auch
With regard to trade costs, if FDI is undertaken to exploit vertical linkages, then higher host trade costs
reduce the value to FDI. Alternatively, if FDI is primarily horizontal and intended to replace
US exports, then higher host trade costs should induce tariff-jumping FDI. Thus, we remain
agnostic on the effect of trade costs.

skilled-labor endowments:
Following Carr et al. (2001), we include information on
skill endowments to proxy for the abundance of skilled laborers who are required for skilledlabor
intensive production by MNEs and expect that greater skill levels (particularly for the
typically skill-deficient host) will be positively correlated with FDI.


investment risk:
As a measure ofinvestment risk we adopt a composite index that includes measures of political risk +, financial risk, and other economic indicators. Our expectation is that higher risk is correlated with
higher investment costs, implying lower FDI.

für daten von China mit africa:
http://www.sais-cari.org/data/

%%%%%%%%%%%%%%%%%%
brauchen wir auch Variablen für unser Host country? 
antwort vom Paper:
While the standard specification would include characteristics of the parent country (e.g.,
GDP, population and measures of trade costs, etc.), we discard such correlates since in our
data the parent country is always the US and these variables only have time-series variation.
We instead capture such time-series variation in US FDI into our sample of countries by
allowing for a quadratic trend in FDI.
<<>>=
setwd("C:/WU/Master/Spatial/Projekt")
getwd()

#readRDS("./data/FDI_data.rds")
#readRDS("./data/W.list.inv.rds")
#readRDS("./data/W.dis.rds")

##-----------------------------------------------functions
ihs <- function(x) {
    y <- log(x + sqrt(x ^ 2 + 1))
    return(y)
}# alternative Box cox transform


full_excel_read<-function(fpath,v=TRUE, skip=FALSE){

  sheetnames <- excel_sheets(fpath)
  workbook <- sapply(sheetnames,function (x){readxl::read_excel(fpath,sheet = x, skip = skip)})
}
@
    
    
    
    
FDi data + shapefile
<<>>=

data2<-readxl::read_xlsx("./data/FDI_China_Outflows_africa_2015_unctad.xlsx", sheet = 2)
data<-gather(data2,"country", "value",2:57)



shp <- readOGR(dsn = "./data/Eurostat_RG_2016_4326_M01", layer ="CNTR_RG_01M_2016_4326", encoding = "UTF-8")

@

<<>>=

data1<-data %>%spread(Year, value)
data1<-na.omit(data1)
africa<-data1$country

remove(data1)
#----------------------------------filter african countries
shp <- shp[shp$NAME_ENGL %in% africa, ]





# #----------------------------------create weight matrices 
# #Queen
# #apply(W.queen, MARGIN=1, FUN=sum)
# island<-c("CV", "KM", "MU", "MG", "SC", "ST")#haben keine Nachbarn
# 
# shp <- shp[!shp$CNTR_ID %in% island, ]
# 
# 
# queen_nb <- poly2nb(shp, row.names = shp$CNTR_ID, queen = T)  #creates a neighborhoodlist
# W.list.queen <- nb2listw(queen_nb, style = "W", zero.policy = TRUE) #creates a weights-list
# W.queen <- listw2mat(W.list.queen) #creates a weigths matrix
# 
# 
# 
# 
# 
# #knear
# coords <-coordinates(shp)
# k.near <- knearneigh(coords, k=3) #indexing neighbors based on k=5
# k5 <- knn2nb(k.near) #creating neighborhood list based on the k(5) nearest neighbors
# W.list.k <- nb2listw(k5, style = "W", zero.policy = FALSE) #creating a weights-list
# 
# 
# # we can also plot weights matrices
# plot(shp)
# plot(queen_nb, coords, add=TRUE, col="green", cex=0.5)
# 
# 
# 
# #-------------------------------------------------------merge--------------------------------------------
# 
# 
# #data <- data[data$Year==2015,]
# 
# #merge data
# shp <- merge(shp, data1, all.x = FALSE, all.y = TRUE, by.x = "NAME_ENGL", by.y = "country")  
# 
# 
# #MI for k-nearest
# moran.test(shp$`2015`, listw = W.list.k, alternative = "greater")
# moran.plot(shp$`2015`, listw = W.list.k)
# #MI for queen 
# moran.test(shp$`2015`, listw = W.list.queen, alternative = "greater")
# 
# #nice polt
# shades <- auto.shading(shp$`2015`)
# choropleth(shp, shp$`2015`, shades)#looks like more spatial dependencies than MI shows
# choro.legend(55.98108,13.93117,  sh=shades, title="FDI Inflows from China 2015", cex = 0.5)
# north.arrow(55.98108,30.13448, 1, col="red")
@


All other data:
<<>>=

#------------------------------------------------read in political data

pol<-full_excel_read("./data/3BResearchersDataset2018.xls", v=FALSE, skip = 6)
pol<-pol[c(2:13)]

POL <- rbindlist(pol, idcol = TRUE)
POL$iso2c<-countrycode(POL$Country, "country.name", "iso2c")

x<-shp@data
x<-as.character(x$CNTR_ID)

POL <- POL[POL$iso2c %in% x, ]

POL<-POL[,-(3:21)]#keine NAs in pol

ind<-gather(POL,"year", "pol",3:15)
ind<-ind%>%group_by(Country, iso2c, year)%>%summarise(pol=sum(pol))#calculate sum of all political risk variables

#Create a data frame that consists of all the 
A <- POL %>% filter(.id=="A-Government Stability") %>% gather("year", "GovStab", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(Country, iso2c, year, id, GovStab)
B <- POL %>% filter(.id=="B-Socioeconomic Conditions") %>% gather("year", "Socio", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, Socio)
C <- POL %>% filter(.id=="C-Investment Profile") %>% gather("year", "InvProf", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, InvProf)
D<- POL %>% filter(.id=="D-Internal Conflict") %>% gather("year", "IntConf", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, IntConf)
E<- POL %>% filter(.id=="E-External Conflict") %>% gather("year", "ExtConf", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, ExtConf)
G<- POL %>% filter(.id=="F-Corruption") %>% gather("year", "Corrup", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, Corrup)
H<- POL %>% filter(.id=="G-Military in Politics") %>% gather("year", "Milit", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, Milit)
I<- POL %>% filter(.id=="H-Religious Tensions") %>% gather("year", "Reli", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, Reli)
J<- POL %>% filter(.id=="J-Ethnic Tensions") %>% gather("year", "Ethnic", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, Ethnic)
K<- POL %>% filter(.id=="K-Democratic Accountability") %>% gather("year", "Democ", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, Democ)
L<- POL %>% filter(.id=="L-Bureaucracy Quality") %>% gather("year", "Bureau", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, Bureau)
A <- A %>% left_join(B, by="id") %>% left_join(C, by="id") %>% left_join(D, by="id") %>% left_join(E, by="id") %>% left_join(G, by="id") %>% left_join(H, by="id") %>% left_join(I, by="id") %>% left_join(J, by="id") %>% left_join(K, by="id") %>% left_join(L, by="id")

remove(POL, pol)
remove(B, C, D, E, G, H, I, J, K, L)

#start ordering

x<-levels(as.factor(ind$iso2c))
shp <- shp[shp$CNTR_ID %in% x, ]

x<-shp@data
x<-as.character(x$CNTR_ID)


ind<-ind[order(ind$year,match(ind$iso2c,x)),]#for ordering ind in the same way as our weights matrix
A<- A[order(A$year,match(ind$iso2c,x)),]#for ordering A in the same way as our weights matrix

sum(1:455==which(ind$iso2c==x))

#------------------------------------------------read in financial risk data-----------------


fin<-full_excel_read("./data/4BDataset2018.xls", v=FALSE, skip = 6)
fin<-fin[c(2:6)]
FIN <- rbindlist(fin, idcol = TRUE)


FIN$iso2c<-countrycode(FIN$Country, "country.name", "iso2c")
FIN <- FIN[FIN$iso2c %in% x, ]

FIN<-FIN[,-(3:21)]#keine NAs in Fin

fin<-gather(FIN,"year", "fin",3:15)
fin<-fin%>%group_by(Country, year)%>%summarise(fin=sum(fin))

B <- FIN %>% filter(.id=="ForDebt") %>% gather("year", "ForDebt", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, ForDebt)
C <- FIN %>% filter(.id=="XRStab") %>% gather("year", "XRStab", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, XRStab)
D <- FIN %>% filter(.id=="DebtServ") %>% gather("year", "DebtServ", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, DebtServ)
E <- FIN %>% filter(.id=="CAXGS") %>% gather("year", "CAXGS", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, CAXGS)
G <- FIN %>% filter(.id=="IntLiq") %>% gather("year", "IntLiq", 3:15) %>% mutate(id=paste(iso2c, year, sep="-")) %>% transmute(id, IntLiq)
B <- B %>% left_join(C, by="id") %>% left_join(D, by="id") %>% left_join(E, by="id") %>% left_join(G, by="id")


ind<-left_join(ind,fin, by=c("Country", "year"))#keine NAs
indices <- left_join(A,B, by="id")

remove(FIN, fin)
remove(A,B,C,D,E,G)

#------------------------------------------------read in economic risk data----------------


eco<-full_excel_read("./data/5BDataset2018.xls", v=FALSE, skip = 6)
eco<-eco[c(2:6)]
ECO <- rbindlist(eco, idcol = TRUE)

ECO$iso2c<-countrycode(ECO$Country, "country.name", "iso2c")
ECO <- ECO[ECO$iso2c %in% x, ]

ECO<-ECO[,-(3:21)]#keine NAS

A <- ECO %>% filter(.id=="CACC") %>% gather("year", "CACC", 3:15) %>% transmute(year, Country, CACC)
B <- ECO %>% filter(.id=="BudBal") %>% gather("year", "BudBal", 3:15) %>% transmute(year, Country, BudBal)
C <- ECO %>% filter(.id=="GDPGrowth") %>% gather("year", "GDPGrowth", 3:15) %>% transmute(year, Country, GDPGrowth)
D <- ECO %>% filter(.id=="GDPHead") %>% gather("year", "GDPHead", 3:15) %>% transmute(year, Country, GDPHead)
E <- ECO %>% filter(.id=="Inflation") %>% gather("year", "Inflation", 3:15) %>% transmute(year, Country, Inflation)
A <- A %>% left_join(B, by=c("year", "Country")) %>% left_join(C, by=c("year", "Country")) %>% left_join(D, by=c("year", "Country")) %>% left_join(E, by=c("year", "Country"))

eco<-gather(ECO,"year", "eco",3:15)
eco<-eco%>%group_by(Country, year)%>%summarise(eco=sum(eco))

ind<-left_join(ind,eco, by=c("Country", "year"))#keine NAs
indices <- left_join(indices,A, by=c("Country", "year"))

anyNA(ind)
anyNA(indices)
remove(ECO, eco)
remove(A,B,C,D,E)


###-------------------------------------------WDI DATA----------------------------------------------------
###------------------------------------------------------------------------------------------------------



#---------------------------------------GDP per Capita and population----------------------------------------
# get the variables gdp per capita and population 
data_WDI<-WDI(country = "all", indicator = c("SP.POP.TOTL","NY.GDP.PCAP.PP.KD"), start=2003, end=2015)# search population postition 497 #search gdp per capita postition 9 
data_WDI <- data_WDI[data_WDI$iso2c %in% x, ]
anyNA(data_WDI)



#---------------------------------------Trade Costs----------------------------------------
#search the variables we want
trade<-WDI(country = "all", indicator = c("NE.TRD.GNFS.ZS"), start=2003, end=2015)#exports: "NE.EXP.GNFS.ZS"# imports: NE.IMP.GNFS.ZS# trade->exports+imports "NE.TRD.GNFS.ZS"

trade <- trade[trade$iso2c %in% x, ]

sum(is.na(trade))


eth<-WDI(country = "all", indicator = c("NY.GDP.MKTP.CD","BX.GSR.TOTL.CD","BM.GSR.TOTL.CD"), start=2003, end=2015)
#NY.GDP.MKTP.CD#gdp
#BX.GSR.TOTL.CD#exports primary income income
#BM.GSR.TOTL.CD#imports primary income

eth <- eth[eth$country %in% "Ethiopia", ]# für die fehlenden Werte von Ethiopien
eth<-eth[order(-eth$year),]#um auch decreasend wie in trade
z<-(eth$BX.GSR.TOTL.CD+eth$BM.GSR.TOTL.CD)/eth$NY.GDP.MKTP.CD*100
z

# 
# k<-filter(trade, country=="Ethiopia")$NE.TRD.GNFS.ZS
# k


trade[118:130,3]<-z

data_WDI<-left_join(data_WDI,trade, by=c("iso2c","country", "year"))
names(data_WDI)[names(data_WDI) %in% c("SP.POP.TOTL","NY.GDP.PCAP.PP.KD","NE.TRD.GNFS.ZS")] = c("population","gdppc", "tradec")

data_WDI$tradec<-1/data_WDI$tradec*100#too calculate the trade costs

#order Wdi data as our shapefile
data_WDI<-data_WDI[order(data_WDI$year,match(data_WDI$iso2c,x)),]

sum(1:455==which(data_WDI$iso2c==x))# gleiche reihenfolge wie shapefile

remove(trade)
remove(eth)
remove(z)
#-------------------------------------------#Total natural resources rents (% of GDP-----------------------------------

reso<-WDI(country = "all", indicator = c("NY.GDP.TOTL.RT.ZS"), start=2003, end=2015)#Total natural resources rents (% of GDP

reso <- reso[reso$iso2c %in% x, ]


sum(is.na(reso))#in libya fehlen die letzten vier Jahre, wegen Bürgerkrieg


#auch werte für 2012, 2013 auf https://tradingeconomics.com/libya/total-natural-resources-rents-percent-of-gdp-wb-data.html
#2013#42
#2012#59

reso$NY.GDP.TOTL.RT.ZS
libya<-reso[209:221,]
libya<-libya[order(libya$year),]
libya[10,3]<-59
libya[11,3]<-42

libya1<-predict(arima(libya$NY.GDP.TOTL.RT.ZS,order=c(1,1,0)), n.ahead=2 )$`pred`#einfach mit AR
libya[12:13,3]<-libya1
libya<-libya[order(-libya$year),]

reso[209:221,"NY.GDP.TOTL.RT.ZS"]<-libya$NY.GDP.TOTL.RT.ZS

data_WDI<-left_join(data_WDI,reso, by=c("iso2c","country", "year"))

names(data_WDI)[names(data_WDI) %in% c("NY.GDP.TOTL.RT.ZS")] = c("reso")


remove(libya1)
remove(reso)
remove(libya)


#-------------------------------------------distance china host country-----------------------------------

china <- readOGR(dsn = "./data/Eurostat_RG_2016_4326_M01", layer ="CNTR_RG_01M_2016_4326", encoding = "UTF-8")
ch<-c(x,"CN")
china<- china[china$CNTR_ID %in% ch, ]

coordsch <-coordinates(china)
distw.tot <- dnearneigh(coordsch,0,Inf, row.names = china$CNTR_ID)
dnbdist.tot <- nbdists(distw.tot, coordsch) 


dist<-dnbdist.tot[[which(china@data$CNTR_ID=="CN")]]#eight for china
dist<-data.frame(x,dist)


data_WDI<-left_join(data_WDI,dist, by=c("iso2c"="x"))



remove(china)
remove(ch)
remove(distw.tot)
remove(dnbdist.tot)
remove(coordsch)
remove(dist)

#-------------------------------------------Sourounding market potential
# in the paper they use the same W for the calculation of it as they use for the spatial dependence 
# I think they also use the total gdp and not the gdp per head. 

#Create W matrix
coords <-coordinates(shp)
distw.tot <- dnearneigh(coords,0,Inf, row.names = shp$CNTR_ID)
dnbdist.tot <- nbdists(distw.tot, coords)
gl.tot <- lapply(dnbdist.tot, function(x) 1/x^2) #calculating inverse distances and take x^2 because we want to put more weight on closer neighbours
W.list.inv <- nb2listw(distw.tot, glist=gl.tot, zero.policy=FALSE, style = "W")
W.dis<-listw2mat(W.list.inv)


#use GDP 
gdp<-WDI(country = "all", indicator = c("NY.GDP.MKTP.KD"), start=2003, end=2015)#GDP (constant 2010 US$) 
gdp <- gdp[gdp$iso2c %in% x, ]
gdp1<-gdp%>%spread(year, NY.GDP.MKTP.KD)

#magic bring gdp1 into same order as W.dis
gdp1<-gdp1[order(match(gdp1[,1],rownames(W.dis))),]

#check if gdp1 and W.dis have same order
sum(1:455==which(rownames(W.dis)==gdp1$iso2c))


#use GDP per capita
# get the variables gdp per capita 
gdppc<-WDI(country = "all", indicator = c("NY.GDP.PCAP.PP.KD"), start=2003, end=2015)#search gdp per capita postition 9 
gdppc <- gdppc[gdppc$iso2c %in% x, ]
gdppc1<-gdppc%>%spread(year, NY.GDP.PCAP.PP.KD)

#magic bring gdppc1 into same order as W.dis
gdppc1<-gdppc1[order(match(gdppc1[,1],rownames(W.dis))),]

#check if gdpp1 and W.dis have same order
sum(1:455==which(rownames(W.dis)==gdp1$iso2c))


#-----------calculate potential GDP
gdp1[,3:15]<-W.dis%*%as.matrix(gdp1[,3:15])

gdp1<-gather(gdp1,"year", "GDP_po", 3:15)#sollt so passen hoff ich
gdp1$year<-as.numeric(gdp1$year)

data_WDI<-left_join(data_WDI,gdp1, by=c("iso2c","country", "year"))


#-----------calculate potential gdppc
gdppc1[,3:15]<-W.dis%*%as.matrix(gdppc1[,3:15])
gdppc1<-gather(gdppc1,"year", "gdppc_po", 3:15)
gdppc1$year <- as.numeric(gdppc1$year)

data_WDI<-left_join(data_WDI,gdppc1, by=c("iso2c","country", "year"))


remove(gdp, gdp1)
remove(gdppc, gdppc1)
#---------------------------------------------BITs-----------------------------------------
chinatable<- read.csv("./data/china_treaties.csv")

chinatable$x<- countrycode(chinatable$x, "country.name", "iso2c")
chinatable<-chinatable[chinatable$x %in% x, ]
bits<-as.matrix(1,9,1)
bits<-cbind(chinatable,bits)
bits<-bits[,-1]

data_WDI<-left_join(data_WDI, bits, by=c("iso2c"="x"))

data_WDI$bits[is.na(data_WDI$bits)]<-0


remove(bits)
remove(chinatable)



@



<<>>=
# ------------------------------------------------------Zusammenführung
ind<-ind[,-1]
ind$year<-as.numeric(ind$year)


data_exp<-left_join(data_WDI, ind, by=c("year", "iso2c"))

#change order
#ind<-ind[order(ind$year,match(ind$iso2c,x)),]


#--------------------------------------------literacy ----------------------------------------------

#cross-country-literacy-rates https://ourworldindata.org/literacy

litt<-read.csv("./data/cross-country-literacy-rates.csv")

litt$Code<-countrycode(litt$Code,"iso3c","iso2c")
litt <- litt[litt$Code%in% x, ]

unique(litt$Entity)#für alle Länder eine observation
#wie interpolieren wir am besten.

litt<-litt[,2:ncol(litt)]
anyNA(data_exp)
data_exp<-left_join(data_exp, litt, by=c("iso2c"="Code", "year"="Year"))

names(data_exp)[names(data_exp) %in% c("Literacy.rates..World.Bank..CIA.World.Factbook..and.other.sources.....")] = c("lit")

data_exp<-subset(data_exp,select=-c(country))
litt<-subset(data_exp,select=c(iso2c, year,lit))

library(plm)
litt<-pdata.frame(litt, c("iso2c", "year"))

data_exp<-pdata.frame(data_exp, c("iso2c", "year"))

zaza<-litt %>% group_by(iso2c)%>% mice(m=10,method = "pmm")
litt<-mice::complete(zaza)#um unseren finalen datensatz zu bekommen
litt<-as.data.frame(litt)

data_exp<-subset(data_exp,select=-c(lit))

litt$year<-as.numeric(rep.int(2003:2015,35))
litt$year <- as.factor(litt$year)
data_exp<-left_join(data_exp, litt, by=c("iso2c", "year"))


#####----------------- FDI Data
data2<-readxl::read_xlsx("./data/FDI_China_Outflows_africa_2015_unctad.xlsx", sheet = 2)
data<-gather(data2,"country", "value",2:57)
data$country<-countrycode(data$country, "country.name", "iso2c")
data<-data[data$country %in% x, ]
data<-na.omit(data)
data<-pdata.frame(data, c("country", "Year"))
data_exp<-left_join(data_exp, data, by=c("iso2c"="country", "year"="Year"))
anyNA(data_exp)


indices <- subset(indices, select=c(-1, -4))
indices <- pdata.frame(indices, c("iso2c", "year"))
data_exp <-pdata.frame(data_exp, c("iso2c", "year"))
data_full <- left_join(data_exp, indices, by=c("iso2c", "year"))

#saveRDS(data_full, file="./data/data_full.RData")


#Literacy http://sdg4monitoring.uis.unesco.org/data_tcg.php
#education_table-youth-and-adult-literacy-rate-updated-oct.-2015 https://data.unicef.org/topic/education/literacy/
# 
# lit<-readxl::read_xlsx("./data/Literacy.xlsx")
# bla<-ress$country
# lit <- lit[lit$`Country or territory` %in% bla, ]
# 
# 
# j<-levels(as.factor(lit$`Country or territory`))
# 
# x<-levels(as.factor(bla))
# 
# setdiff(x,j)
#-601865091 https://tellmaps.com/uis/literacy/#!/tellmap/-601865091

@



Testing
<<>>=


#stack it how we want it 
data_exp<-data_exp[order(data_exp$year,match(data_exp$iso2c,x)),]
data_exp<-data_exp[order(match(data_exp$iso2c,x), data_exp$year),]


#saveRDS(data_exp, "FDI_data.rds")
#saveRDS(W.list.inv, "W.list.inv.rds")
#saveRDS(W.dis, "W.dis.rds")
#lagrange multiplier test


fm<-ihs(value)~log(population)+log(gdppc)+tradec+reso+log(dist)+log(GDP_po)+bits+pol+fin+eco+lit

#singular mit der gleichung, wenn ich population und gdppc raushau gehts

#fm<-ihs(value)~Within(log(population))+Within(log(gdppc))+tradec+reso+log(dist)+log(GDP_po)+bits+pol+fin+eco+lit

#fm<-ihs(value)~Within(log(population))+Within(log(gdppc))+Within(tradec)+Within(reso)+log(dist)+Within(log(GDP_po))+bits+Within(pol)+Within(fin)+Within(eco)+Within(lit)


head(data_exp)

slmer <- slmtest(fm,data = data_exp ,listw=W.list.inv, test="lme")
slmer
slmlag<- slmtest(fm,data = data_exp ,listw=W.list.inv, test="lml")
slmlag

#geht nur wenn wir bits und dist weglassen
spherr <- sphtest(x=fm,data = data_exp ,listw=W.list.inv, spatial.model="sarar", method="ML")
spherr

Within()

bsktest(x=fm, data = data_exp ,listw=W.list.inv, test="LM1")
bsktest(x=fm, data = data_exp ,listw=W.list.inv, test="CLMmu")
bsktest(x=fm, data = data_exp ,listw=W.list.inv, test="CLMlambda")

bsjktest(x=fm, data = data_exp ,listw=W.list.inv, test="C.2")


sararre <- spreml(fm, data_exp ,w=W.list.inv, lag = TRUE, errors = "semsrre")
summary(sararre)


sarsem<-spml(fm, data_exp, listw=W.list.inv, lag=TRUE, spatial.error="kkp", model="within", effect="twoways", method="eigen", quiet=TRUE, zero.policy=NULL, tol.solce=1e-10)

summary(sarsem)
effects(sarsem)
#countrycode um iso2 zu bekommen 

#mice package impotiert datensätze für natural recources verwenden # hab daweil mal igeine lösung

#literacy variable bearbeiten 

@


\end{document}