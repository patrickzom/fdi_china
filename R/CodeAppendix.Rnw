\documentclass{article}

\begin{document}


<<General, echo=FALSE, eval=TRUE>>=
library(BMS)
library(stargazer)

data <- readRDS("./data/data_full.RData")

@



<<Base Model, echo=TRUE, eval=TRUE>>=

#base case
fm <-ihs(value)~log(population)+log(gdp)+log(tradec)+reso+log(dist)+log(gdp_po)+bits+log(invcost)+lit
a <- lm(fm, data)

#base case + trend
fm <-ihs(value)~log(population)+log(gdp)+log(tradec)+reso+log(dist)+log(gdp_po)+bits+log(invcost)+lit+as.numeric(year)
a1 <- lm(fm, data)

#base case + trendÂ²
fm <-ihs(value)~log(population)+log(gdp)+log(tradec)+reso+log(dist)+log(gdp_po)+bits+log(invcost)+lit+as.numeric(year)+I(as.numeric(year)^2)
a2 <- lm(fm, data)

stargazer(a, a1, a2, type="latex", title="Base Model", style="all" ,keep.stat=c("adj.rsq","rsq","aic"))
@

\section{Bayesian Model Selection}


<<Preparation, echo=TRUE, eval=TRUE>>=

#----------------------------------------------------- Functions -----------------------------------------------------#
ihs <- function(x) {
    y <- log(x + sqrt(x ^ 2 + 1))
    return(y)
}# Alternative Box Cox Transformation

panel_unstack = function(stackeddata, tstep=NULL) {
  # stackeddata is a stacked data frame/matrix ordered in the following way
  #               Variable1  Variable2
  # ctry1_time1
  # ctry1_time2
  # ...
  # ctry2_time1
  # ctry2_time2
  # ...
  # tstep is the number of time points
  # panel_unstack produces a 3-dimensional array out of that
 
  bigT=nrow(stackeddata);K=ncol(stackeddata);
  if (is.null(tstep)) tstep=bigT
  X1=aperm(array(as.vector(t(as.matrix(stackeddata))),dim=c(K,tstep,bigT/tstep)), perm=c(2,1,3))
  try(dimnames(X1)[[1]] <-  unique(sapply(strsplit(rownames(stackeddata),"_"),
function(x) x[[2]])), silent=TRUE)
  try(dimnames(X1)[[2]] <-  colnames(stackeddata), silent=TRUE)
  try(dimnames(X1)[[3]] <-  unique(sapply(strsplit(rownames(stackeddata),"_"),
function(x) x[[1]])), silent=TRUE)
  return(X1)
}

panel_stack = function(array3d) {
  x1= apply(array3d,2,rbind)
  try(rownames(x1) <-  as.vector(sapply(dimnames(array3d)[[3]],
FUN=function(x) paste(x, dimnames(array3d)[[1]], sep="_"))), silent=TRUE)
  return(as.data.frame(x1))
}

demean = function(x, margin) {
 #x is an array
 #margin is the dimension along which should be demeaned
 if (!is.array(x)) stop("x must be an array/matrix")
 otherdims=(1:length(dim(x)))[-margin]
  sweep(x,otherdims,apply(x,otherdims,mean))
}


#----------------------------------------------------- Data Preparation -----------------------------------------------------#

data_new <- data[,c(33, 3:6, 8, 10:32)] #reduce data set and change columns - removes bits, dist, iso2c, year and indices

#Use the functions 
array <- panel_unstack(data_new, tstep=13)
time <- panel_stack(demean(array,3))
country <- panel_stack(demean(array,1))

@


<<BMS-Results, echo=TRUE, eval=TRUE>>=

#BMS - country fixed effects
modelCountry <- bms(country, burn=20000000, iter=30000000, start.value=5, mcmc="bd",user.int=T)
saveRDS(modelCountry, "./data/modelCountry")

#BMS - time fixed effects
modelTime <- bms(time, burn=20000000, iter=30000000, start.value=5, mcmc="bd",user.int=T)
saveRDS(modelTime, "./data/modelTime")
@
For the country fixed effects model we would include the following variables:
\begin{itemize}
\item Population
\item Inflation
\item Surrounding-market potential
\item GDP Growth (from the economic risk indicator)
\item Religious Tensions (from the political risk indicator)
\end{itemize}

For the time fixed effects model we would include the following variables:
\begin{itemize}
\item Literacy Rate
\item Socioeconomic Conditions (from the political risk indicator)
\item GDP
\item Population
\item GDP Growth (from the economic risk indicator)
\end{itemize}


For the robustness check we vary the sampling algorithm. Instead of the default birth/death MCMC algorithm we use the reversible jump algorithm which adds a "swap" step to the birth/death algorithm. Thereafter we draw once from every model.
<<Robustness Checks I, echo=TRUE, eval=FALSE>>=

modelCountryEnum <- bms(country, mcmc="enumerate",user.int=T) #population, inflation, gdp_po, GDPGrowth, Religious
saveRDS(modelCountryEnum, "./data/modelCountryEnum")

modelTimeEnum <- bms(time, mcmc="enumerate",user.int=T) #lit, Socio, gdp, population, GDPGrowth
saveRDS(modelTimeEnum, "./data/modelTimeEnum")

modelCountry1 <- bms(country, burn=20000000, iter=30000000, start.value=5, mcmc="bd",user.int=T) #population, inflation, gdp_po, GDPGrowth, Religious
saveRDS(modelCountry1, "./data/modelCountry1")

modelTime1 <- bms(time, burn=20000000, iter=30000000, start.value=5, mcmc="rev.jump",user.int=T) #lit, Socio, gdp, population, GDPGrowth
saveRDS(modelTime1, "./data/modelTime1")

@
We clearly see that the results do not depend on the algorithm, which is clearly a good sign.

\subsection{BMS - sub-sampling}

We now proceed to the robustness checks with the sub-samples. For the political risk indicators we keep the 20 million burn-ins and 30 million iterations, for the other two indicators we can reduce them because the model space is significant smaller and thus we don't need that many draws for the other two sub-samples.
<<Robustness Checks II, echo=TRUE, eval=FALSE>>=
data_test <- data[,c(33, 3:6, 8, 32, 10:31, 34:36)] #reduce data set and change columns - removes bits, dist, iso2c, year


#Single indices from pol
data_test_pol <- data_test[,c(1:19, 31:32)] 
dat.array_pol <- panel_unstack(data_test_pol, tstep=13)

#timeDat
timeDat_pol <- panel_stack(demean(dat.array_pol,3))
modelTd1 <- bms(timeDat_pol, burn=20000000, iter=30000000, mcmc="bd",user.int=T) #lit, Socio, gdp, population
saveRDS(modelTd1, "./data/modelTd1")
modelTd2 <- bms(timeDat_pol, burn=20000000, iter=30000000, mcmc="rev.jump",user.int=T) #lit, Socio, gdp, population
saveRDS(modelTd2, "./data/modelTd2")
#remove everything below 1%: none
#remove everything below 2%: Internal, Military, Government, External, Bureaucracy, Corruption, Religious
#remove everything below 3%: Internal, Military, Government, External, Bureaucracy, Corruption, Religious 
#remove everything below 5%: Internal, Military, Government, External, Bureaucracy, Corruption, Religious, Democratic, Law, Investment

#countryDat
countryDat_pol <- panel_stack(demean(dat.array_pol,1))
modelCd1 <- bms(countryDat_pol, burn=20000000, iter=30000000, mcmc="bd",user.int=T) #population, gdp_po, Religious
saveRDS(modelCd1, "./data/modelCd1")
modelCd2 <- bms(countryDat_pol, burn=20000000, iter=30000000, mcmc="rev.jump",user.int=T) #population, gdp_po, Religious
saveRDS(modelCd2, "./data/modelCd2")
#remove everything below 1%: none
#remove everything below 2%: Democratic, Socioeconomic, Investment, Ethnic, Military
#remove everything below 3%: Democratic, Socioeconomic, Investment, Ethnic, Military, External, Internal, Bureaucracy
#remove everything below 5%: Democratic, Socioeconomic, Investment, Ethnic, Military, External, Internal, Bureaucracy, Government


#Single indices from fin
data_test_fin <- data_test[,c(1:7, 20:24, 30, 32)] 
dat.array_fin <- panel_unstack(data_test_fin, tstep=13)

#timeDat
timeDat_fin <- panel_stack(demean(dat.array_fin,3))
modelTd3 <- bms(timeDat_fin, burn=2000000, iter=3000000, mcmc="bd",user.int=T) #lit, population, pol, gdp, reso, IntLiq
saveRDS(modelTd3, "./data/modelTd3")
modelTd4 <- bms(timeDat_fin, burn=2000000, iter=3000000, mcmc="rev.jump",user.int=T) #lit, population, pol, gdp, reso, IntLiq
saveRDS(modelTd4, "./data/modelTd4")
#remove everything below 1%: none
#remove everything below 2%: none
#remove everything below 3%: CAXGS, DebtServ, XStab
#remove everything below 5%: CAXGS, DebtServ, XStab, ForDebt

#countryDat
countryDat_fin <- panel_stack(demean(dat.array_fin,1))
modelCd3 <- bms(countryDat_fin, burn=2000000, iter=3000000, mcmc="bd",user.int=T) #population, gdp_po, XRStab, ForDebt
saveRDS(modelCd3, "./data/modelCd3")
modelCd4 <- bms(countryDat_fin, burn=2000000, iter=3000000, mcmc="rev.jump",user.int=T) #population, gdp_po, XRStab, ForDebt
saveRDS(modelCd4, "./data/modelCd4")
#remove everything below 1%: none
#remove everything below 2%: DebtServ, CAXGS
#remove everything below 3%: DebtServ, CAXGS, IntLiq
#remove everything below 5%: DebtServ, CAXGS, IntLiq 


#Single indices from eco
data_test_eco <- data_test[,c(1:7, 25:31)] 
dat.array_eco <- panel_unstack(data_test_eco, tstep=13)

timeDat_eco <- panel_stack(demean(dat.array_eco,3))
modelTd5 <- bms(timeDat_eco, burn=2000000, iter=3000000, mcmc="bd",user.int=T) #lit, pol, population, gdp, GDPGrowth
saveRDS(modelTd5, "./data/modelTd5")
modelTd6 <- bms(timeDat_eco, burn=2000000, iter=3000000, mcmc="rev.jump",user.int=T) #lit, pol, population, gdp, GDPGrowth, reso
saveRDS(modelTd6, "./data/modelTd6")
#remove everything below 1%: none
#remove everything below 2%: none
#remove everything below 3%: none
#remove everything below 5%: Inflation, BudBal, CACC

countryDat_eco <- panel_stack(demean(dat.array_eco,1))
modelCd5 <- bms(countryDat_eco, burn=2000000, iter=3000000, mcmc="bd",user.int=T) #population, Inflation, gdp_po, GDPGrowth, reso, BudBal
saveRDS(modelCd5, "./data/modelCd5")
modelCd6 <- bms(countryDat_eco, burn=2000000, iter=3000000, mcmc="rev.jump",user.int=T) #population, Inflation, gdp_po, GDPGrwoth, reso, BudBal
saveRDS(modelCd6, "./data/modelCd6")
#remove everything below 1%: none
#remove everything below 2%: none
#remove everything below 3%: GDPHead
#remove everything below 5%: GDPHead, CACC


@
For the time fixed effects model we remove the following variables (because below 3\%):
\begin{itemize}
\item Government Stability (political risk component)
\item Internal Conflict (political risk component)
\item External Conflict (political risk component)
\item Corruption (political risk component)
\item Military in Politics (political risk component)
\item Religious Tensions (political risk component)
\item Bureaucracy Quality (political risk component)
\item Foreign Debt Service as a Percentage of Exports of Goods and Services (financial risk component)
\item Current Account as a Percentage of Exports of Goods and Services (financial risk component)
\item Exchange Rate Stability (financial risk component)
\end{itemize}

For the country fixed effects model we remove the following variables (because below 3\%:
\begin{itemize}
\item Socioeconomic Conditions (political risk component)
\item Investment Profile (political risk component)
\item Internal Conflict (political risk component)
\item External Conflict (political risk component)
\item Military in Politics (political risk component)
\item Ethnic Tensions (political risk component)
\item Democratic Accountability (political risk component)
\item Bureaucracy Quality (political risk component)
\item GDP per Head (economic risk component)
\item Foreign Debt Service as a Percentage of Exports of Goods and Services (financial risk component) 
\item Current Account as a Percentage of Exports of Goods and Services (financial risk component) 
\item Net International Liquidity as Months of Import Cover (financial risk component)
\end{itemize}

<<Robustness Checks III, echo=TRUE, eval=TRUE>>=
data_test <- data[,c(33, 3:6, 8, 32, 10:31, 34:36)] #reduce data set and change columns - removes bits, dist, iso2c, year

#Time fixed effects
#remove all below 2%: Internal, Military, Government, External, Bureaucracy, Corruption, Religious, CAXGS, DebtServ, XStab
data_test_time <- data_test[,c(1:7, 9:10, 16:18, 22:23, 25:29)]

modelTime2 <- bms(data_test_time, burn=20000000, iter=30000000, start.value=5, mcmc="bd",user.int=T)
saveRDS(modelTime2, "./data/modelTime2")
modelTime3 <- bms(data_test_time, burn=20000000, iter=30000000, start.value=5, mcmc="rev.jump",user.int=T)
saveRDS(modelTime3, "./data/modelTime3")


#Country fixed effects
#remove all below 3%: Democratic, Socioeconomic, Investment, Ethnic, Military, External, Internal, Bureaucracy, DebtServ, CAXGS, IntLiq, GDPHead
data_test_country <- data_test[,c(1:8, 13, 15:16, 22, 24:27, 29)]

modelCountry2 <- bms(data_test_country, burn=20000000, iter=30000000, start.value=5, mcmc="bd",user.int=T)
saveRDS(modelCountry2, "./data/modelCountry2")
modelCountry3 <- bms(data_test_country, burn=20000000, iter=30000000, start.value=5, mcmc="rev.jump",user.int=T)
saveRDS(modelCountry3, "./data/modelCountry3")
@

Given the above analysis we would include the following variables for the time fixed effects model:
\begin{itemize}
\item Literacy Rate
\item GDP
\item Socioeconomic Conditions (from the political risk indicator)
\item GDP Growth (from the economic risk indicator)
\item Investment Profile (from the political risk indicator)
\item ForDebt (from the financial risk indicator)
\item CACC (from the economic risk indicator)
\item Population
\end{itemize}

Given the above analysis we would include the following variables for the country fixed effects model:
\begin{itemize}
\item Literacy Rate
\item Governmental Stability (from the political risk indicator)
\item Population
\item Natural Resources
\item GDP Growth (from the economic risk indicator)
\item GDP
\item Law and Order (from the political risk indicator)
\end{itemize}


<<Robustness Checks IV, echo=TRUE, eval=TRUE>>=
data_test <- data[,c(33, 3:6, 8, 32, 10:31, 34:36)] #reduce data set and change columns - removes bits, dist, iso2c, year

#Time fixed effects
#remove all below 2%: Internal, Military, Government, External, Bureaucracy, Corruption, Religious
data_test_time <- data_test[,c(1:7, 9:10, 16:18, 20:29)]

modelTime4 <- bms(data_test_time, burn=20000000, iter=30000000, start.value=5, mcmc="bd",user.int=T) #lit, gdp, socio, gdpgrowth, invest, debtserv, CACC
saveRDS(modelTime4, "./data/modelTime4")
modelTime5 <- bms(data_test_time, burn=20000000, iter=30000000, start.value=5, mcmc="rev.jump",user.int=T)
saveRDS(modelTime5, "./data/modelTime5")


#Country fixed effects
#remove all below 2%: Democratic, Socioeconomic, Investment, Ethnic, Military, DebtServ, CAXGS
data_test_country <- data_test[,c(1:8, 11:13, 15:16, 19:20, 22:29)]

modelCountry4 <- bms(data_test_country, burn=20000000, iter=30000000, start.value=5, mcmc="bd",user.int=T)
saveRDS(modelCountry4, "./data/modelCountry4")
modelCountry5 <- bms(data_test_country, burn=20000000, iter=30000000, start.value=5, mcmc="rev.jump",user.int=T)
saveRDS(modelCountry5, "./data/modelCountry5")
@
Given the above analysis we would include the following variables for the time fixed effects model:
\begin{itemize}
\item Literacy Rate
\item GDP
\item Socioeconomic Conditions (from the political risk indicator)
\item GDP Growth (from the economic risk indicator)
\item Investment Profile (from the political risk indicator)
\item ForDebt (from the financial risk indicator)
\item DebtServ (from the financial risk indicator)
\item CACC (from the economic risk indicator)
\end{itemize}

Given the above analysis we would include the following variables for the country fixed effects model:
\begin{itemize}
\item Literacy Rate
\item Governmental Stability (from the political risk indicator)
\item Population
\item GDP
\item GDP Growth (from the economic risk indicator)
\item Natural Resources
\item Bureaucracy Quality (from the political risk indicator)
\end{itemize}





In addition to the robustness checks above we carried out the following:
\begin{itemize}
\item Changed the order of the variables.
\item Started the MCMC algorithm with the remaining variables from the base model.
\item Started the MCMC algorithm with 0-10 covariates.
\item Used different algorithms.
\end{itemize}

To conclude the results did not change tramendously but to some extend depending on the variable set. However, the starting model and the choosen MCMC algorithm did not have an effect on the results. 


Therefore we conclude that the results from the first draw are robust and we proceed with our analysis using the results given above.


<<Country Fixed Effects, echo=TRUE, eval=TRUE>>=
fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+data$`Religious Tensions`+Inflation+GDPGrowth+fin
b <- lm(fm, data)

fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+ihs(data$`Religious Tensions`)+ihs(Inflation)+ihs(GDPGrowth)+log(fin)
b1 <- lm(fm, data)

fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+data$`Religious Tensions`+Inflation+GDPGrowth+data$`Government Stability`+data$`Law and Order`+fin
b2 <- lm(fm, data)

fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+ihs(data$`Religious Tensions`)+ihs(Inflation)+ihs(GDPGrowth)+log(data$`Government Stability`)+log(data$`Law and Order`)+log(fin)
b3 <- lm(fm, data)

fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+GDPGrowth+data$`Government Stability`+data$`Law and Order`+fin
b4 <- lm(fm, data)

fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+ihs(GDPGrowth)+log(data$`Government Stability`)+log(data$`Law and Order`)+log(fin)
b5 <- lm(fm, data)

fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+ihs(GDPGrowth)+log(data$`Government Stability`)+ihs(data$`Bureaucracy Quality`)+log(fin)
b6 <- lm(fm, data)

fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+data$`Religious Tensions`+Inflation+GDPGrowth+data$`Government Stability`+data$`Law and Order`+data$`Bureaucracy Quality`+fin
b7 <- lm(fm, data)

AIC(b)
AIC(b1)
AIC(b2)
AIC(b3)
AIC(b4)
AIC(b5)
AIC(b6)
summary(b2)

stargazer(b, b4, b2, type="latex", title="Base Model", style="aer")
@

For the country fixed effects model we would include the following variables:
\begin{itemize}
\item Population
\item Inflation (from the economic risk indicator)
\item Surrounding-market potential
\item GDP Growth (from the economic risk indicator)
\item Religious Tensions (from the political risk indicator)
\end{itemize}

For the time fixed effects model we would include the following variables:
\begin{itemize}
\item Literacy Rate
\item Socioeconomic Conditions (from the political risk indicator)
\item GDP
\item Population
\item GDP Growth (from the economic risk indicator)
\end{itemize}

<<Time Fixed Effects, echo=TRUE, eval=TRUE>>=
fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+data$`Socioeconomic Conditions`+Inflation+GDPGrowth
c <- lm(fm, data)

fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+ihs(data$`Religious Tensions`)+ihs(Inflation)+ihs(GDPGrowth)+log(fin)
c1 <- lm(fm, data)

fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+data$`Religious Tensions`+Inflation+GDPGrowth+data$`Government Stability`+data$`Law and Order`+fin
c2 <- lm(fm, data)

fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+ihs(data$`Religious Tensions`)+ihs(Inflation)+ihs(GDPGrowth)+log(data$`Government Stability`)+log(data$`Law and Order`)+log(fin)
c3 <- lm(fm, data)

fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+GDPGrowth+data$`Government Stability`+data$`Law and Order`+fin
c4 <- lm(fm, data)

fm <- ihs(value) ~ log(population)+log(gdp)+log(tradec)+log(dist)+log(gdp_po)+reso+bits+lit+ihs(GDPGrowth)+log(data$`Government Stability`)+log(data$`Law and Order`)+log(fin)
c5 <- lm(fm, data)

AIC(c)
AIC(c1)
AIC(c2)
AIC(c3)
AIC(c4)
AIC(c5)
summary(b2)


@



<<>>=
##-------------------Fromula

fm<-ihs(value)~lit+log(gdp)+`Socioeconomic Conditions`+`Investment Profile`+ForDebt+CACC+log(population)
b <- lm(fm, data)




#singular mit der gleichung, wenn ich population und gdppc raushau gehts
#fm<-ihs(value)~Within(log(population))+Within(log(gdppc))+tradec+reso+log(dist)+log(GDP_po)+bits+pol+fin+eco+lit
#fm<-ihs(value)~Within(log(population))+Within(log(gdppc))+Within(tradec)+Within(reso)+log(dist)+Within(log(GDP_po))+bits+Within(pol)+Within(fin)+Within(eco)+Within(lit)


#Locally robust panel Lagrange Multiplier tests for spatial dependence
#Should we use spatial lag or spatial error model or both?
#Assumption: pooling assumption, i.e. they do not allow for any kind of individual effect

#Test for spatial error
slmtest(fm,data = data_exp_year ,listw=W.list.inv, test="lme")
#Result: LM = 2.5249, df = 1, p-value = 0.1121 -> no spatial error dependence

#Test for spatial lag
slmtest(fm,data = data_exp_year ,listw=W.list.inv, test="lml")
#Result: LM = 7.3923, df = 1, p-value = 0.006551 -> spatial lag dependence

#Test for spatial error given that we have spatial lag dependence
slmtest(fm, data=data_exp_year, listw=W.list.inv, test="rlml")
#Result: LM = 14.757, df = 1, p-value = 0.0001223 -> spatial error and spatial lag dependence

#CONCLUSION: Spatial Lag or Spatial Lag & Error


#Use sphtest to perform a spatial Hausmann test: fixed effects?
#Cannot use ML due to Singularity problems
sphtest(x=fm, data=data_exp_year, listw=W.list.inv, spatial.model="sarar", method="GM")
#Result: chisq = 53.57, df = 10, p-value = 5.833e-08 -> Combined model is inconsistent - keep fixed effects model


#"bsktest"
bsktest(x=fm, data=data_exp_year, listw=W.list.inv, test="LMH") # p-value = 1.288e-14 -> Random Regional Effects and Spatial autocorrelation
bsktest(x=fm, data = data_exp_year ,listw=W.list.inv, test="LM1") # p-value = 1.555e-14 -> Random effects
bsktest(x=fm, data = data_exp_year ,listw=W.list.inv, test="LM2") # p-value = 0.1121 -> no spatial error correlation
bsktest(x=fm, data = data_exp_year ,listw=W.list.inv, test="CLMmu") # p-value < 2.2e-16 -> Random regional effects
bsktest(x=fm, data = data_exp_year ,listw=W.list.inv, test="CLMlambda") # p-value = 0.118 -> no spatial error correlation

#CONCLUSION: Random effects but no spatial error correlation


#"bsjktest" - Is there serial correlation on top?
bsjktest(x=fm, data = data_exp_year ,listw=W.list.inv, test="J") # p-value < 2.2e-16 -> random effects or serial corr. or spatial dependence in error terms
bsjktest(x=fm, data = data_exp_year ,listw=W.list.inv, test="C.1") # p-value = 0.04902 -> spatial dependence in error terms, sub RE and serial corr.
bsjktest(x=fm, data = data_exp_year ,listw=W.list.inv, test="C.2") # p-value = 1.134e-06 -> serial corr. in error terms, sub RE and spatial dependence
bsjktest(x=fm, data = data_exp_year ,listw=W.list.inv, test="C.3") # p-value = 1 -> no random effects, sub serial corr. and spatial dependence in error terms

#CONCLUSION: Spatial dependence in error terms and serial correlation but no random effects

#What should we estimate now? 



##- 2. ESTIMATING
# Î» : (lambda) : Spatial autoregressive parameter
# ÏÂ² ("phi") : Random effects
# Ï : (rho) : Spatial error component
# Ï (psi) : Serial correlation

# Full model including random effects ("model"), lagged dependent ("lag=TRUE") and spatial error ("spatial.error")
sararreb <- spml(fm, data = data_exp_year ,listw=W.list.inv, model="random", lag=TRUE, spatial.error="b")
summary(sararreb)
#Spatial autoregressive parameter, Random effects parameter are significant
sararrekkp <- spml(fm, data = data_exp_year ,listw=W.list.inv, model="random", lag=TRUE, spatial.error="kkp")
summary(sararrekkp)
#Spatial autoregressive parameter, Random effects parameter and Spatial error component are significant
sararreb$logLik < sararrekkp$logLik

# Model including random effects ("model"), lagged dependent ("lag=TRUE")
sarreb <- spml(fm, data = data_exp_year ,listw=W.list.inv, model="random", lag=TRUE, spatial.error="none")
summary(sarreb)
#Spatial autoregressive parameter, Random effects parameter are significant
sarrekkp <- spml(fm, data = data_exp_year ,listw=W.list.inv, model="random", lag=TRUE, spatial.error="none")
summary(sarrekkp)
#Spatial autoregressive parameter, Random effects parameter are significant
sarreb$logLik = sarrekkp$logLik

# Full model including random effects ("model"), lagged dependent ("lag=TRUE") and spatial error ("spatial.error")
sararre <- spreml(fm, data_exp_year ,w=W.list.inv, lag = TRUE, errors = "semsrre")
summary(sararre)
#Serial correlation and spatial autroregressive parameter are significant

sarsem<-spml(fm, data_exp, listw=W.list.inv, lag=TRUE, spatial.error="kkp", model="within", effect="twoways", method="eigen", quiet=TRUE, zero.policy=NULL, tol.solce=1e-10)

summary(sarsem)
effects(sarsem)
#countrycode um iso2 zu bekommen 

#mice package impotiert datensÃ¤tze fÃ¼r natural recources verwenden # hab daweil mal igeine lÃ¶sung

#literacy variable bearbeiten 

@


\end{document}